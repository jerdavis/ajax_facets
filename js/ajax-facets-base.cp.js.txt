/**
 * @file
 * Handles AJAX fetching of views, including filter submission and response.
 */

(function ($, Drupal, drupalSettings) {
  /**
   * @todo
   *   Remove commented lines. They're only for first-development purpose.
   */

  'use strict';

  Drupal.ajax_facets = Drupal.ajax_facets || {viewDomId: null, viewSettings: null};
  Drupal.behaviors.facetsAjaxWidget = {
    attach: function (context, drupalSettings) {
      Drupal.ajax_facets.attach(context, drupalSettings);
    }
  };

  /**
   * Trying to find DomID for our view.
   */
  Drupal.ajax_facets.attach = function (context, drupalSettings) {
    $.each(drupalSettings.views.ajaxViews, function (key, value) {
      // Not sure about the purpose of following conditional:
      //if (value.view_name == drupalSettings.ajaxFacets.view_name) { // Newer versions of Facets include the view type. Ex.: views_page__MY-VIEW__page_N
      if (~drupalSettings.ajaxFacets.view_name.indexOf(value.view_name)) {
        Drupal.ajax_facets.viewDomId = key;
        Drupal.ajax_facets.viewSettings = value;
      }
    });

    var $links = $('.js-facets-checkbox-links .facet-item a'); // .js-facets-ajax-links-checkboxes .facet-item a
    
    $links.once('facets-ajax-ajaxify').each(Drupal.ajax_facets.makeAjaxCheckboxFacet);
  };

  /**
   * Replace a link with a checked checkbox.
   */
  Drupal.ajax_facets.makeAjaxCheckboxFacet = function () {
    var $link = $(this);
    var active = $link.hasClass('is-active');
    var description = $link.html();
    var href = $link.attr('href');
    var id = $link.data('drupal-facet-item-id');

    var checkbox = $('<input type="checkbox" class="facets-checkbox" id="' + id + '" data-facet-query="' + $(this).attr('data-facet-query') + '" />');
    var label = $('<label for="' + id + '">' + description + '</label>');
    
    checkbox.on('change', function (e) {
    //$link.on('click', function (e) {
      $(this).toggleClass('active');
      var facet_query = [];
      $('.js-facets-ajax-links .active').each(function(){
        facet_query.push($(this).attr('data-facet-query'));
      });
      Drupal.ajax_facets.ajaxView(Drupal.ajax_facets.viewSettings, facet_query);
      e.preventDefault();
    });

    $link.before(checkbox).before(label).hide();
  }

  /**
   * Javascript object for a certain view.
   *
   * @constructor
   *
   * @param {object} settings
   *   Settings object for the ajax view.
   * @param {string} settings.view_dom_id
   *   The DOM id of the view.
   */
  Drupal.ajax_facets.ajaxView = function (settings, facet_query) {
    var selector = '.js-view-dom-id-' + settings.view_dom_id;
    this.$view = $(selector);
    console.log(facet_query);
    // Retrieve the path to use for views' ajax.
    var ajax_path = drupalSettings.views.ajax_path;

    // If there are multiple views this might've ended up showing up multiple
    // times.
    if (ajax_path.constructor.toString().indexOf('Array') !== -1) {
      ajax_path = ajax_path[0];
    }

    // Check if there are any GET parameters to send to views.
    var queryString = window.location.search || '';
    if (queryString !== '') {
      // Remove the question mark and Drupal path component if any.
      queryString = queryString.slice(1).replace(/q=[^&]+&?|&?render=[^&]+/, '');
      if (queryString !== '') {
        // If there is a '?' in ajax_path, clean url are on and & should be
        // used to add parameters.
        queryString = ((/\?/.test(ajax_path)) ? '&' : '?') + queryString;
      }
    }

    // Add facets to query.
    settings.f = facet_query;

    this.element_settings = {
      url: ajax_path + queryString,
      submit: settings,
      setClick: true,
      event: 'click',
      selector: selector,
      progress: {type: 'fullscreen'}
    };

    this.settings = settings;

    // Add the ajax to exposed forms.
    this.$exposed_form = $('form#views-exposed-form-' + settings.view_name.replace(/_/g, '-') + '-' + settings.view_display_id.replace(/_/g, '-'));
    this.$exposed_form.once('exposed-form').each($.proxy(this.attachExposedFormAjax, this));

    // Add the ajax to pagers.
    this.$view
      // Don't attach to nested views. Doing so would attach multiple behaviors
      // to a given element.
      .filter($.proxy(this.filterNestedViews, this))
      .once('ajax-pager').each($.proxy(this.attachPagerAjax, this));

    // Add a trigger to update this view specifically. In order to trigger a
    // refresh use the following code.
    //
    // @code
    // $('.view-name').trigger('RefreshView');
    // @endcode
    var self_settings = $.extend({}, this.element_settings, {
      event: 'RefreshView',
      base: this.selector,
      element: this.$view.get(0)
    });
    this.refreshViewAjax = Drupal.ajax(self_settings);
    this.refreshViewAjax.execute();
  };

})(jQuery, Drupal, drupalSettings);
 
